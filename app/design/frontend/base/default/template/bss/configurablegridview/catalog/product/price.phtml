<?php
/**
* BssCommerce Co.
*
* NOTICE OF LICENSE
*
* This source file is subject to the EULA
* that is bundled with this package in the file LICENSE.txt.
* It is also available through the world-wide-web at this URL:
* http://bsscommerce.com/Bss-Commerce-License.txt
*
* =================================================================
*                 MAGENTO EDITION USAGE NOTICE
* =================================================================
* This package designed for Magento COMMUNITY edition
* BssCommerce does not guarantee correct work of this extension
* on any other Magento edition except Magento COMMUNITY edition.
* BssCommerce does not provide extension support in case of
* incorrect edition usage.
* =================================================================
*
* @category   BSS
* @package    BSS_Configurablegridview
* @author     Hieu Dang
* @copyright  Copyright (c) 2014-2105 BssCommerce Co. (http://bsscommerce.com)
* @license    http://bsscommerce.com/Bss-Commerce-License.txt
*/
?>
<?php 
    $_product = $this->getProduct();
    $_id = $_product->getId();
    $product = Mage::getModel('catalog/product')->load($_id);
?>
<?php if(!$product->getProConfigurableView() || $product->getProConfigurableView() == Bss_Configurablegridview_Helper_Data::PRODUCT_PRO_VIEW_ENABLED):?>
    <?php
        $_coreHelper = $this->helper('core');
        $_weeeHelper = $this->helper('weee');
        $_taxHelper = $this->helper('tax');
        /* @var $_coreHelper Mage_Core_Helper_Data */
        /* @var $_weeeHelper Mage_Weee_Helper_Data */
        /* @var $_taxHelper Mage_Tax_Helper_Data */
        $_storeId = $_product->getStoreId();
        $_store = $_product->getStore();
        
        $_weeeSeparator = '';
        $_simplePricesTax = ($_taxHelper->displayPriceIncludingTax() || $_taxHelper->displayBothPrices());
        $_minimalPriceValue = $_product->getMinimalPrice();
        $_minimalPriceValue = $_store->roundPrice($_store->convertPrice($_minimalPriceValue));
        $_minimalPrice = $_taxHelper->getPrice($_product, $_minimalPriceValue, $_simplePricesTax);
        $_convertedFinalPrice = $_store->roundPrice($_store->convertPrice($_product->getFinalPrice()));
        $_specialPriceStoreLabel = $this->getProductAttribute('special_price')->getStoreLabel();
    ?>
    <?php 
        $childProducts = Mage::getModel('catalog/product_type_configurable')->getUsedProducts(null,$_product);
        $allTier = array();
        foreach($childProducts as $child) {
            $childId = $child->getId();
            $childProduct = Mage::getModel('catalog/product')->load($childId);
            foreach ($childProduct->getTierPrice() as $tier){
                array_push($allTier, $_coreHelper->currency($tier['price'], false, false));
            }
            array_push($allTier, $_coreHelper->currency($childProduct->getFinalPrice(), false, false));
        }
    ?>

    <div class="price-box">

        <span class="regular-price-clone" id="product-price-<?php echo $_id ?><?php echo $this->getIdSuffix() ?>">
            <span class="price"></span>                                    
        </span>
        <span class="regular-price">
            <span class="price"></span>                                    
        </span>
        <p class="minimal-price">
            <span class="price-label"><?php echo $this->__('Price From:') ?></span>
            <span class="price">
                <?php 
                    echo $_coreHelper->currency(Min($allTier), true, true);
                ?>
            </span><br />
            <span class="price-label"><?php echo $this->__('Price To:') ?></span>
            <span class="price">
                <?php 
                    echo $_coreHelper->currency(Max($allTier), true, true);
                ?>
            </span>
        </p>
    <?php if ($this->getDisplayMinimalPrice() && $_minimalPriceValue && $_minimalPriceValue < $_convertedFinalPrice): ?>

        <?php $_minimalPriceDisplayValue = $_minimalPrice; ?>
        <?php if ($_weeeTaxAmount && $_weeeHelper->typeOfDisplay($_product, array(0, 1, 4))): ?>
            <?php $_minimalPriceDisplayValue = $_minimalPrice + $_weeeTaxAmount; ?>
        <?php endif; ?>

        <?php if ($this->getUseLinkForAsLowAs()): ?>
            <a href="<?php echo $_product->getProductUrl(); ?>" class="minimal-price-link">
        <?php else: ?>
            <span class="minimal-price-link">
        <?php endif ?>
        <?php if ($this->getUseLinkForAsLowAs()): ?>
            </a>
        <?php else: ?>
            </span>
        <?php endif ?>
    <?php endif; /* if ($this->getDisplayMinimalPrice() && $_minimalPrice && $_minimalPrice < $_finalPrice): */ ?>
    </div>
<?php else:?>
    <?php echo Mage_Catalog_Block_Product::getPriceHtml($_product, true);?>
<?php endif;?>